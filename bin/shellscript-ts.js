var ShellScriptTs;!function(e){var s=function(){function e(){this.fs=require("fs"),this.tss=require("typescript-simple"),this.vm=require("vm"),this.console=new t("[shellscript.ts] "),this.cache=new o("/tmp/shellscript-ts/cache",this.console),this.options=require("optimist").usage("A nodejs module for creating shellscript in TypeScript.\nUsage: $0 [options] file").alias("n","no-cache").describe("n","Do not use cached JavaScript.")["default"]("n",!1).alias("v","verbose").describe("v","Shows details about the process.")["default"]("v",!1).alias("h","help").describe("h","Print this message")["default"]("h",!1)["boolean"](["n","v","h"]).demand(1)}return e.prototype.execute=function(){this.console.log("ShellScriptTs#execute : parsing args...");var e=this.parseArgs();this.console.log("ShellScriptTs#execute : resolving js...");var s=this.resolveJs(e);this.console.log("ShellScriptTs#execute : executing js..."),this.executeJs(s)},e.prototype.parseArgs=function(){var e=this.options.argv;return e.h&&(this.options.showHelp(),process.exit(1)),1!=e._.length&&(this.options.showHelp(),process.exit(1)),this.console.setEnabled(e.v),this.console.log("ShellScriptTs#parseArgs : verbose="+e.v),this.cache.setEnabled(!e.n),this.console.log("ShellScriptTs#parseArgs : no-cache="+e.n),this.console.log("ShellScriptTs#parseArgs : script="+e._[0]),e._[0]},e.prototype.resolveJs=function(e){var s=null;try{s=this.fs.readFileSync(e,"utf-8")}catch(t){this.console.log("ENOENT"!==t.code?'ShellScriptTs#resolveJs : failed to read file "'+e+'" : '+t:'ShellScriptTs#resolveJs : file "'+e+'" not found'),process.exit(1)}this.console.log("ShellScriptTs#resolveJs : scriptBody ---------------------"),this.console.log("\n"+s);var o=s.replace(/^#!.+\n/g,function(){return""});this.console.log("ShellScriptTs#resolveJs : tsBody -------------------------"),this.console.log("\n"+o);var c=this.cache.fetch(e,o);return null==c&&(c=this.tss(o),this.console.log("ShellScriptTs#resolveJs storing cache"),this.cache.store(e,o,c)),this.console.log("ShellScriptTs#resolveJs : jsBody -------------------------"),this.console.log("\n"+c),c},e.prototype.executeJs=function(e){this.console.log("ShellScriptTs#executeJs : jsBody -------------------------"),this.console.log("\n"+e),this.vm.runInThisContext(e)},e}();e.ShellScriptTs=s;var t=function(){function e(e){this.prefix=e}return e.prototype.setEnabled=function(e){this.enabled=e},e.prototype.log=function(e){this.enabled&&console.log(this.prefix+e)},e}(),o=function(){function e(e,s){this.fs=require("fs"),this.mkdirp=require("mkdirp"),this.crypto=require("crypto"),this.cacheDir=e,this.console=s;try{this.mkdirp.sync(this.cacheDir)}catch(t){if("ENOENT"!==t.code)throw t}}return e.prototype.setEnabled=function(e){this.enabled=e},e.prototype.fetch=function(e,s){if(!this.enabled)return this.console.log("Cache#fetch : fetch skipped."),null;var t=this.createCacheId(e,s),o=this.cacheDir+"/"+t;this.console.log("Cache#fetch : cacheFileName="+o);try{var c=this.fs.readFileSync(o,"utf-8");return this.console.log("Cache#fetch : fetched cache"),c}catch(i){if("ENOENT"!==i.code)throw i;return this.console.log("Cache#fetch : no cache"),null}},e.prototype.store=function(e,s,t){if(!this.enabled)return void this.console.log("Cache#store : store skipped.");var o=this.createCacheId(e,s),c=this.cacheDir+"/"+o;this.console.log("Cache#store : cacheFileName="+c),this.fs.writeFile(c,t),this.console.log("Cache#store : stored cache")},e.prototype.createCacheId=function(e,s){var t=this.fs.realpathSync(e);this.console.log("Cache#createCacheId : tsRealPath="+t);var o=t.match(/\/([^/]+)$/);o=o[1],this.console.log("Cache#createCacheId : tsFileName="+o);var c=this.crypto.createHash("sha1").update(t).digest("hex");this.console.log("Cache#createCacheId : tsRealPathHash="+c);var i=this.crypto.createHash("sha1").update(s).digest("hex");this.console.log("Cache#createCacheId : tsBodyHash="+i);var h=o+"."+c+"."+i;return this.console.log("Cache#createCacheId : cacheId="+h),h},e}()}(ShellScriptTs=exports.ShellScriptTs||(exports.ShellScriptTs={})),(new ShellScriptTs.ShellScriptTs).execute();